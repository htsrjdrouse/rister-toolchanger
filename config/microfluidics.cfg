
[arduino_serial]
serial_port: /dev/ttyACM1
baud_rate: 115200  # Adjust to match your Arduino firmware

#Powers the microfluidics board using the BTT 12V fan pin
[fan_generic arduino_power]
pin: PA8
max_power: 1.0

[delayed_gcode arduino_power_on]
initial_duration: 1
gcode:
    SET_FAN_SPEED FAN=arduino_power SPEED=1


[gcode_macro MANUAL_PCV]
description: Turns off liquid level feedback so that you can manually fill the pressure compensation vessel
gcode:
	G4 P2000
	SEND_ARDUINO COMMAND="manpcv"
	G4 P1000


[gcode_macro FEEDBACK_PCV]
description: Turns on liquid level feedback control for stabilizing pressure within the dispensing system
gcode:
	G4 P2000
	SEND_ARDUINO COMMAND="feedbackpcv"
	G4 P1000

[gcode_macro WASH_ON]
description: Turns on wash pump in wash station
gcode:
	G4 P1000
	SEND_ARDUINO COMMAND="washon"
	G4 P1000

[gcode_macro WASH_OFF]
description: Turns off wash pump in wash station
gcode:
	G4 P1000
	SEND_ARDUINO COMMAND="washoff"
	G4 P1000

[gcode_macro WASTE_ON]
description: Turns on waste pump in wash station
gcode:
	G4 P1000
	SEND_ARDUINO COMMAND="dryon"
	G4 P1000

[gcode_macro WASTE_OFF]
description: Turns off waste pump in wash station
gcode:
	G4 P1000
	SEND_ARDUINO COMMAND="dryoff"
	G4 P1000


# Pump Speed Control Macros
# Add these to your microfluidics.cfg file

[gcode_macro SET_WASH_SPEED]
description: Set wash pump PWM speed (0-255)
gcode:
    {% set speed = params.SPEED|default(255)|int %}
    {% if speed < 0 %}
        {% set speed = 0 %}
    {% elif speed > 255 %}
        {% set speed = 255 %}
    {% endif %}
    G4 P1000
    SEND_ARDUINO COMMAND="SET_WASH_VAL {speed}"
    G4 P1000
    RESPOND MSG="Wash pump speed set to {speed} (0-255)"

[gcode_macro SET_DRY_SPEED]
description: Set waste/dry pump PWM speed (0-255)
gcode:
    {% set speed = params.SPEED|default(255)|int %}
    {% if speed < 0 %}
        {% set speed = 0 %}
    {% elif speed > 255 %}
        {% set speed = 255 %}
    {% endif %}
    G4 P1000
    SEND_ARDUINO COMMAND="SET_DRY_VAL {speed}"
    G4 P1000
    RESPOND MSG="Waste/Dry pump speed set to {speed} (0-255)"

[gcode_macro SET_PCV_SPEED]
description: Set PCV pump PWM speed (0-255)
gcode:
    {% set speed = params.SPEED|default(255)|int %}
    {% if speed < 0 %}
        {% set speed = 0 %}
    {% elif speed > 255 %}
        {% set speed = 255 %}
    {% endif %}
    G4 P1000
    SEND_ARDUINO COMMAND="SET_PCV_VAL {speed}"
    G4 P1000
    RESPOND MSG="PCV pump speed set to {speed} (0-255)"


# Enhanced wash with speed control
[gcode_macro WASH_ON_WITH_SPEED]
description: Turn on wash pump with specified speed (0-255)
gcode:
    {% set speed = params.SPEED|default(255)|int %}
    SET_WASH_SPEED SPEED={speed}
    G4 P500
    WASH_ON
    RESPOND MSG="Wash pump started at speed {speed}"

# Enhanced dry/waste with speed control  
[gcode_macro WASTE_ON_WITH_SPEED]
description: Turn on waste pump with specified speed (0-255)
gcode:
    {% set speed = params.SPEED|default(255)|int %}
    SET_DRY_SPEED SPEED={speed}
    G4 P500
    WASTE_ON
    RESPOND MSG="Waste pump started at speed {speed}"



[gcode_macro FLUIDIC_CONTROL]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Fluidic Control"
    RESPOND TYPE=command MSG="action:prompt_button Feedback PCV On|FEEDBACK_PCV|primary"
    RESPOND TYPE=command MSG="action:prompt_button Feedback PCV Off|MANUAL_PCV|error"
    RESPOND TYPE=command MSG="action:prompt_button Turn Wash On|WASH_ON|primary" 
    RESPOND TYPE=command MSG="action:prompt_button Turn Wash Off|WASH_OFF|error"
    RESPOND TYPE=command MSG="action:prompt_button Turn Waste On|WASTE_ON|primary"
    RESPOND TYPE=command MSG="action:prompt_button Turn Waste Off|WASTE_OFF|error"
    RESPOND TYPE=command MSG="action:prompt_button Valve input|VALVE_INPUT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Valve output|VALVE_OUTPUT|error"
    RESPOND TYPE=command MSG="action:prompt_button Valve bypass|VALVE_BYPASS|primary"
    RESPOND TYPE=command MSG="action:prompt_button Waste basin position|WASTE_POSITION|error"
    RESPOND TYPE=command MSG="action:prompt_button Waste basin position|WASTE_POSITION|primary"
    RESPOND TYPE=command MSG="action:prompt_button Touch Dry|TOUCH_DRY|primary"
    RESPOND TYPE=command MSG="action:prompt_button Eject pipette|EJECT_PIPETTE|error"
    RESPOND TYPE=command MSG="action:prompt_show"


# Touch Dry Pad Coordinate Array Macro
# This macro stores all 210 positions (6 rows x 35 columns) and returns coordinates based on key
[gcode_macro GET_DRY_PAD_POSITION]
variable_current_x: 0
variable_current_y: 0
# Base coordinates and spacing - modify these when you move your dry pad
variable_base_x: 87.00
variable_base_y: 335.00
variable_x_spacing: 4.0
variable_y_spacing: 4.0
gcode:
    {% set key = params.KEY|int %}
    
    # Simple approach: key 1-35 = row 0, key 36-70 = row 1, etc.
    {% set row = (key - 1) // 35 %}
    {% set col = (key - 1) % 35 %}
    
    # Calculate coordinates directly
    {% set x_coord = printer["gcode_macro GET_DRY_PAD_POSITION"].base_x + (col * printer["gcode_macro GET_DRY_PAD_POSITION"].x_spacing) %}
    {% set y_coord = printer["gcode_macro GET_DRY_PAD_POSITION"].base_y + (row * printer["gcode_macro GET_DRY_PAD_POSITION"].y_spacing) %}
    
    RESPOND MSG="Position {key}: X{x_coord} Y{y_coord}"
    SET_GCODE_VARIABLE MACRO=GET_DRY_PAD_POSITION VARIABLE=current_x VALUE={x_coord}
    SET_GCODE_VARIABLE MACRO=GET_DRY_PAD_POSITION VARIABLE=current_y VALUE={y_coord}

# Touch Dry Macro with Auto Position Cycling and Configurable Pipette Settings
[gcode_macro TOUCH_DRY]
variable_current_position: 1
variable_max_positions: 210
gcode:
    # Get the current position
    {% set pos = printer["gcode_macro TOUCH_DRY"].current_position %}
    
    # Calculate coordinates directly in this macro
    {% set row = (pos - 1) // 35 %}
    {% set col = (pos - 1) % 35 %}
    {% set base_x = 87.00 %}
    {% set base_y = 335.00 %}
    {% set x_spacing = 4.0 %}
    {% set y_spacing = 4.0 %}
    {% set x_coord = base_x + (col * x_spacing) %}
    {% set y_coord = base_y + (row * y_spacing) %}
    
    # Get pipette tip settings from variables.cfg
    {% set ptip_z = printer.save_variables.variables.ptipz|default(70) %}
    {% set ptip_servo = printer.save_variables.variables.ptipservo|default(115) %}
    
    # Move to the dry pad position
    RESPOND MSG="Moving to dry pad position {pos}: X{x_coord} Y{y_coord}"
    RESPOND MSG="Using pipette settings: Z{ptip_z}, Servo{ptip_servo}"
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
    G4 P1000  ; Pause 1000ms for stabilization
    G0 Z110 F1000
    G4 P1500  ; Pause 1500ms for stabilization
    G0 X{x_coord} Y{y_coord} F3000  # Adjust feedrate as needed
    G4 P1500  ; Pause 1500ms for stabilization    
    
    # Perform touch dry operation using variable Z height and servo position
    G1 Z{ptip_z} F1000
    G4 P1500  ; Pause 1500ms for stabilization
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE={ptip_servo}
    G4 P1000  ; Pause 1000ms for stabilization
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
    
    # Increment position for next use
    {% set next_pos = pos + 1 %}
    {% if next_pos > printer["gcode_macro TOUCH_DRY"].max_positions %}
        {% set next_pos = 1 %}
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=TOUCH_DRY VARIABLE=current_position VALUE={next_pos}
    RESPOND MSG="Next touch dry will use position {next_pos}"

# Macro to switch to P100 pipette tip settings
[gcode_macro SETP100]
gcode:
    SAVE_VARIABLE VARIABLE=ptipz VALUE=65
    SAVE_VARIABLE VARIABLE=ptipservo VALUE=110
    SAVE_VARIABLE VARIABLE=ptipzeject VALUE=38
    SAVE_VARIABLE VARIABLE=ptipservoeject VALUE=170
    SAVE_VARIABLE VARIABLE=ptipypos VALUE=367
    RESPOND MSG="Switched to P100 tip settings: Z65, Servo110, ZEject 38, ServoEject 170, YEject 367"

# Macro to switch to P300 pipette tip settings  
[gcode_macro SETP300]
gcode:
    SAVE_VARIABLE VARIABLE=ptipz VALUE=70
    SAVE_VARIABLE VARIABLE=ptipservo VALUE=115
    SAVE_VARIABLE VARIABLE=ptipzeject VALUE=38
    SAVE_VARIABLE VARIABLE=ptipservoeject VALUE=170
    SAVE_VARIABLE VARIABLE=ptipypos VALUE=367
    RESPOND MSG="Switched to P300 tip settings: Z70, Servo115, ZEject 38, ServoEject 170, YEject 367"

# Macro to check current pipette tip settings
[gcode_macro CHECK_TIP_SETTINGS]
gcode:
    {% set ptip_z = printer.save_variables.variables.ptipz|default(70) %}
    {% set ptip_servo = printer.save_variables.variables.ptipservo|default(115) %}
    {% set ptip_z_eject = printer.save_variables.variables.ptipzeject|default(38) %}
    {% set ptip_servo_eject = printer.save_variables.variables.ptipservoeject|default(170) %}
    {% set ptip_y_pos = printer.save_variables.variables.ptipypos|default(367) %}
    RESPOND MSG="Current settings - TouchDry: Z{ptip_z}, Servo{ptip_servo} | Eject: Z{ptip_z_eject}, Servo{ptip_servo_eject}, Y{ptip_y_pos}"


[gcode_macro VALVE_OUTPUT]
description: Positions valve to output direction towards pipette (dispense)
gcode:
  G4 P2000
  SEND_ARDUINO COMMAND="turnon5v"
  G4 P1000
  SEND_ARDUINO COMMAND="valveservo 180"
  G4 P1000
  SEND_ARDUINO COMMAND="turnoff5v"
  G4 P1000


[gcode_macro VALVE_INPUT]
description: Positions valve to input direction that fills syringe (aspiration)
gcode:
  G4 P2000
  SEND_ARDUINO COMMAND="turnon5v"
  G4 P1000
  SEND_ARDUINO COMMAND="valveservo 0"
  G4 P1000
  SEND_ARDUINO COMMAND="turnoff5v"
  G4 P1000


[gcode_macro VALVE_BYPASS]
description: Positions valve to shut off flow (bypass)
gcode:
  G4 P2000
  SEND_ARDUINO COMMAND="turnon5v"
  G4 P1000
  SEND_ARDUINO COMMAND="valveservo 30"
  G4 P1000
  SEND_ARDUINO COMMAND="turnoff5v"
  G4 P1000


[gcode_macro WASTE_POSITION]
description: Positions valve to shut off flow (bypass) - with safe Y positioning
gcode:

  # Check current Y position and move to safe Y if needed
  {% set current_y = printer.toolhead.position.y %}
  {% if current_y > 341 %}
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=100
    G4 P1000
    G1 Z130 F1000
    G1 Y340.000 F4000  ; Move to safe Y position first
    G4 P1000
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
    G4 P2000
  G4 P1000
  {% endif %}  
  G1 X170.000 F4000
  G4 P1000
  G1 Y372.000 F4000
  G4 P1000
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=100
  G4 P1000
  G1 Y373.000 F4000
  G4 P1000
  G1 Z92.000 F500
  G4 P1000
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=170
  G4 P1000



[gcode_macro WASH_POSITION]
description: Positions tool at wash station well A1
gcode:

  # Check current Y position and move to safe Y if needed
  {% set current_y = printer.toolhead.position.y %}
  {% if current_y > 345 %}
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=100
    G4 P1000
    G1 Z130 F1000
    G1 Y340.000 F4000  ; Move to safe Y position first
    G4 P1000
    SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
    G4 P1000
  {% endif %}
  G90  ; Absolute positioning
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
  G4 P500  ; Pause 500ms for stabilization
  G1 Z100 F1000
  G1 X134.00 Y374.50 F3000  ; Move to wash well position
  G4 P500  ; Pause 500ms for stabilization
  G1 Z70 F1000
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=120
  G4 P500  ; Pause 500ms for stabilization


[gcode_macro EJECT_PIPETTE]
description: Positions valve to shut off flow (bypass)
gcode:
; --- Sequence 2: REMOVE_PIPETTE_ROW1_COL2 ---
; Move to remove_pipette well A2
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
  G4 P1000
  {% set current_y = printer.toolhead.position.y %}
  {% if current_y > 372 %}
    G1 Y340.000 F4000  ; Move to safe Y position first
    G4 P1000
  {% endif %}
  G90  ; Absolute positioning
  G1 Z120 F750
  G4 P500  ; Pause 500ms for stabilization
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
  G4 P500  ; Pause 500ms for stabilization
  G1 X318.00 Y350.00 F3000  ; Move to well position
  G4 P500  ; Pause 500ms for stabilization
  G1 Z38 F500
  G4 P500  ; Pause 500ms for stabilization
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=170
  G4 P1500  ; Pause 500ms for stabilization
  G1 X318.00 Y367.00 F3000  ; Move to well position
  G4 P1500  ; Pause 500ms for stabilization
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
  G4 P500  ; Pause 500ms for stabilization
  G1 X318.00 Y358.00 F3000  ; Move to well position
  G4 P500  ; Pause 500ms for stabilization
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=130
  G4 P1000  ; Pause 500ms for stabilization  
  SET_SERVO SERVO=linearactuator_servo_l0 ANGLE=0
  G4 P1000  ; Pause 500ms for stabilization  

[gcode_macro WASH_ON_TIMED]
gcode:
    {% set duration = params.DURATION|default(30)|int %}
    WASH_ON
    G4 P{duration * 1000}
    WASH_OFF
    RESPOND MSG="Timed wash completed ({duration}s)"



