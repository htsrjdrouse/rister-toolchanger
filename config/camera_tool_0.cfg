# camera_tool_0.cfg - Toolchanger configuration for Camera Tool 0
# Updated to work with integrated klipper_camera_service.py

[gcode_macro UPDATE_CAMERA_SENSOR_STATES]
description: Update main system sensor states for camera tool
gcode:
    {% set dock_state = params.DOCK|default("UNKNOWN") %}
    {% set carriage_state = params.CARRIAGE|default("UNKNOWN") %}
    # Update the main sensor state variables
    SET_GCODE_VARIABLE MACRO=TOOL_SENSOR_STATES VARIABLE=dc0_state VALUE='"{dock_state}"'
    SET_GCODE_VARIABLE MACRO=TOOL_SENSOR_STATES VARIABLE=cc0_state VALUE='"{carriage_state}"'
    RESPOND MSG="Camera sensor states updated: dock={dock_state}, carriage={carriage_state}"

[gcode_macro CAMERA_CONFIG_C0]
variable_dock_x: 0
variable_dock_y: 0
variable_dock_z: 35
variable_unlock_x: 0
variable_unlock_y: 0
variable_lock_x: 0
variable_lock_y: 0
variable_loading: 0
variable_active: 0  # 0: Not active, 1: Active
gcode:
    # Placeholder for variables

# Include ONLY the updated camera configurations (remove conflicting ones)
[include camera_control.cfg]      # Updated with calibration support
[include camera_monitor.cfg]      # Updated for integrated service
[include camera_calibration.cfg]  # New calibration features

# DO NOT include camera_state_detection.cfg - it conflicts with camera_monitor.cfg

# === TOOL LED ===
# Define the neopixel for the camera tool
[neopixel led_c0]
pin: PB14  # REPLACE WITH ACTUAL PIN FOR YOUR CAMERA TOOL LED
chain_count: 1
color_order: GRB
initial_RED: 0
initial_GREEN: 0.0
initial_BLUE: 0.0

# === LED EFFECTS FOR CAMERA TOOL ===
[led_effect dock_state_c0]
autostart: false
frame_rate: 24
leds:
    neopixel:led_c0
layers:
    static 10 1 top (0.5, 0.5, 0.5)  # White when docked

[led_effect lock_state_c0]
autostart: false
frame_rate: 24
leds:
    neopixel:led_c0
layers:
    static 10 1 top (0, 0, 0.7)  # Blue when on carriage

[led_effect error_blink_c0]
autostart: false
frame_rate: 24
leds:
    neopixel:led_c0
layers:
    strobe 1 2 add (1.0, 0, 0)  # Blinking red for error states

[led_effect heating_c0]
autostart: false
frame_rate: 24
leds:
    neopixel:led_c0
layers:
    breathing 3 0 screen (0.5, 0.6, 0.05)  # Breathing yellow for heating

[led_effect idle_c0]
autostart: false
frame_rate: 24
leds:
    neopixel:led_c0
layers:
    static 10 1 top (0, 1, 0.7)  # Cyan for idle state

# === MAIN TOOL LOADING MACRO ===
[gcode_macro C0]
description: Load camera tool 0
gcode:
    M118 Loading camera tool C0...
    LOAD_TOOL TOOL_ID=c0
    # Set tool as active immediately after loading
    SET_GCODE_VARIABLE MACRO=CAMERA_CONFIG_C0 VARIABLE=active VALUE=1
    SET_GCODE_VARIABLE MACRO=VARIABLES_LIST VARIABLE=active_tool VALUE='"c0"'
    # Verify tool was picked up correctly
    CAMERA_TOOL_PICKED_C0

# === CAMERA TOOL STATE MONITORING (Updated for integrated service) ===
[gcode_macro CHECK_C0_TOOL_STATE]
description: Check the current state of camera tool 0
gcode:
    M118 Checking camera tool C0 state...
    CHECK_CAMERA  # This calls the updated macro from camera_monitor.cfg

[gcode_macro VERIFY_TOOL_STATE_C0]
description: Verify camera tool 0 is in the expected state
gcode:
    {% set expected_dock = params.DOCK|default('') %}
    {% set expected_carriage = params.CARRIAGE|default('') %}
    
    # Use the updated macros from camera_monitor.cfg
    {% if expected_dock == "true" and expected_carriage == "false" %}
        VERIFY_CAMERA_DOCKED
    {% elif expected_dock == "false" and expected_carriage == "true" %}
        VERIFY_CAMERA_PICKED
    {% else %}
        CHECK_CAMERA
    {% endif %}

[gcode_macro VERIFY_TOOL_PICKUP_C0]
description: Verify the camera tool 0 is properly picked up (on carriage)
gcode:
    M118 Verifying camera tool C0 pickup...
    VERIFY_CAMERA_PICKED  # Updated macro from camera_monitor.cfg

[gcode_macro VERIFY_TOOL_DOCKED_C0]
description: Verify the camera tool 0 is properly docked
gcode:
    M118 Verifying camera tool C0 is docked...
    VERIFY_CAMERA_DOCKED  # Updated macro from camera_monitor.cfg

# === CAMERA TOOL CHANGE EVENT HANDLERS ===
[gcode_macro CAMERA_TOOL_PICKED_C0]
description: Call after camera tool 0 is picked up
gcode:
    M118 Camera tool C0 picked up - verifying and updating status...
    
    # Verify pickup was successful
    VERIFY_TOOL_PICKUP_C0
    
    # Set active states
    SET_GCODE_VARIABLE MACRO=CAMERA_CONFIG_C0 VARIABLE=active VALUE=1
    SET_GCODE_VARIABLE MACRO=VARIABLES_LIST VARIABLE=active_tool VALUE='"c0"'
    
    # Update LED status
    SET_LED_EFFECT EFFECT=lock_state_c0
    
    M118 Camera tool C0 is now active

[gcode_macro CAMERA_TOOL_DOCKED_C0]
description: Call after camera tool 0 is docked
gcode:
    M118 Camera tool C0 being docked - verifying and updating status...
    
    # Verify docking was successful
    VERIFY_TOOL_DOCKED_C0
    
    # Set inactive states
    SET_GCODE_VARIABLE MACRO=CAMERA_CONFIG_C0 VARIABLE=active VALUE=0
    SET_GCODE_VARIABLE MACRO=VARIABLES_LIST VARIABLE=active_tool VALUE='"none"'
    
    # Update LED status
    SET_LED_EFFECT EFFECT=dock_state_c0
    
    M118 Camera tool C0 is now docked and inactive

# === ENHANCED TOOL CHANGE MACROS ===
[gcode_macro CAMERA0_TOOL_PICKED]
description: Enhanced camera tool picked handler
gcode:
    M118 Processing camera tool pickup...
    
    # Set tool as active first
    SET_GCODE_VARIABLE MACRO=CAMERA_CONFIG_C0 VARIABLE=active VALUE=1
    SET_GCODE_VARIABLE MACRO=VARIABLES_LIST VARIABLE=active_tool VALUE='"c0"'
    
    # Then verify and update
    CAMERA_TOOL_PICKED_C0
    
    # Start camera stream for immediate use
    CAMERA_STREAM_START
    
    M118 Camera tool C0 ready for use

[gcode_macro CAMERA0_TOOL_DOCKED]
description: Enhanced camera tool docked handler
gcode:
    M118 Processing camera tool docking...
    
    # Stop camera stream
    CAMERA_STREAM_STOP
    
    # Then dock and verify
    CAMERA_TOOL_DOCKED_C0
    
    M118 Camera tool C0 docked successfully

# === TOOL REGISTRATION ===
[delayed_gcode REGISTER_CAMERA_TOOL]
initial_duration: 2
gcode:
    M118 Registering camera tool C0...
    REGISTER_TOOL TOOL_ID=c0
    # Initialize camera usage counter
    SET_GCODE_VARIABLE MACRO=TOOL_USE_COUNT VARIABLE="c0_use_count" VALUE="0"
    M118 Camera tool C0 registered

# === LED INITIALIZATION ===
[delayed_gcode INIT_CAMERA_TOOL_LED]
initial_duration: 5.0
gcode:
    M118 Initializing camera tool LED...
    # Set initial LED state based on tool position
    {% if printer["gcode_macro CAMERA_CONFIG_C0"].active|int == 1 %}
        SET_LED_EFFECT EFFECT=lock_state_c0
    {% else %}
        SET_LED_EFFECT EFFECT=dock_state_c0
    {% endif %}

# === CLEANUP OLD VARIABLES ===
[delayed_gcode CLEAN_UP_E10_VARS]
initial_duration: 7
gcode:
    {% if 'save_variables' in printer %}
        {% set sv = printer.save_variables.variables %}
        {% if 'e10_lock_x' in sv %}
            RESPOND MSG="Removing redundant e10_* variables for cleaner configuration"
            SAVE_VARIABLE VARIABLE=e10_lock_x VALUE="0"
            SAVE_VARIABLE VARIABLE=e10_lock_y VALUE="0"
            SAVE_VARIABLE VARIABLE=e10_unlock_x VALUE="0"
            SAVE_VARIABLE VARIABLE=e10_unlock_y VALUE="0"
            SAVE_VARIABLE VARIABLE=e10_dock_x VALUE="0"
            SAVE_VARIABLE VARIABLE=e10_dock_y VALUE="0"
            SAVE_VARIABLE VARIABLE=e10_dock_z VALUE="0"
        {% endif %}
    {% endif %}

# === HELPER MACROS ===
[gcode_macro UPDATE_LED_FROM_SENSORS_CAMERA]
description: Update camera tool LED based on sensor states
gcode:
    {% if printer["gcode_macro CAMERA_CONFIG_C0"].active|int == 1 %}
        SET_LED_EFFECT EFFECT=lock_state_c0
    {% else %}
        SET_LED_EFFECT EFFECT=dock_state_c0
    {% endif %}

# === DIAGNOSTIC MACROS ===
[gcode_macro C0_STATUS]
description: Show camera tool C0 status
gcode:
    {% set active = printer["gcode_macro CAMERA_CONFIG_C0"].active|int %}
    {% set current_tool = printer["gcode_macro VARIABLES_LIST"].active_tool %}
    
    M118 ===== CAMERA TOOL C0 STATUS =====
    M118 Active: {'YES' if active == 1 else 'NO'}
    M118 Current active tool: {current_tool}
    M118 Tool states match: {'YES' if (active == 1 and current_tool == 'c0') or (active == 0 and current_tool != 'c0') else 'NO'}
    
    # Check sensor states
    CHECK_C0_TOOL_STATE

[gcode_macro FIX_C0_STATE]
description: Fix camera tool C0 state if it gets out of sync
gcode:
    M118 Fixing camera tool C0 state...
    
    # Force set the tool as active
    SET_GCODE_VARIABLE MACRO=CAMERA_CONFIG_C0 VARIABLE=active VALUE=1
    SET_GCODE_VARIABLE MACRO=VARIABLES_LIST VARIABLE=active_tool VALUE='"c0"'
    
    # Update LED
    SET_LED_EFFECT EFFECT=lock_state_c0
    
    # Start camera
    CAMERA_STREAM_START
    
    M118 Camera tool C0 state fixed - should now be unloadable with a_1