#[mcu adxl]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E660D4A0A73A2736-if00

[adxl345]
#cs_pin: adxl:gpio1
#spi_bus: spi0a
#axes_map: x,y,z
cs_pin: EBB1: PB12
spi_software_sclk_pin: EBB1: PB10
spi_software_mosi_pin: EBB1: PB11
spi_software_miso_pin: EBB1: PB2
axes_map: y,-x,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    160,160, 100  # middle of bed as an example


[gcode_macro AXES_SHAPER_CALIBRATION]
description: Run standard input shaper test for all axes
gcode:
    {% set verbose = params.VERBOSE|default(true) %}

    TEST_RESONANCES AXIS=X
    M400
    TEST_RESONANCES AXIS=Y
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER


[gcode_macro BELTS_SHAPER_CALIBRATION]
description: Run custom demi-axe test to analyze belts on CoreXY printers
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    
    TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b
    M400
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELTS
    
# This file include some gcode_shell_commands
# Be sure to have the gcode_shell_command.py Klipper extension installed (easiest way to install it is to use KIAUH in the Advanced section)

#[gcode_shell_command plot_graph]
#command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
#timeout: 300.0
#verbose: True
