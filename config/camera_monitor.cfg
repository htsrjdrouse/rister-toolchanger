# Camera Tool Monitoring Configuration for Dakash Toolchanger
# Updated to work with integrated klipper_camera_service.py

# Shell commands using MQTT (replaces direct check_camera.sh calls)
[gcode_shell_command camera_sensor_status]
command: mosquitto_pub -h {printer["gcode_macro CAMERA_CONFIG"].variable_camera0ip} -t "dakash/gpio/sensors/request" -m "status" -q 2
timeout: 10
verbose: True

[gcode_shell_command camera_verify_docked]
command: mosquitto_pub -h {printer["gcode_macro CAMERA_CONFIG"].variable_camera0ip} -t "dakash/gpio/sensors/request" -m "verify_docked" -q 2
timeout: 10
verbose: True

[gcode_shell_command camera_verify_picked]
command: mosquitto_pub -h {printer["gcode_macro CAMERA_CONFIG"].variable_camera0ip} -t "dakash/gpio/sensors/request" -m "verify_picked" -q 2
timeout: 10
verbose: True

[gcode_shell_command camera_check_state]
command: mosquitto_pub -h {printer["gcode_macro CAMERA_CONFIG"].variable_camera0ip} -t "dakash/gpio/sensors/request" -m "check" -q 2
timeout: 10
verbose: True

# Legacy shell commands for backward compatibility (if you want to keep check_camera.sh)
# Comment these out if using integrated service exclusively
# [gcode_shell_command verify_docked_legacy]
# command: /home/pi/check_camera.sh verify_docked
# timeout: 15
# verbose: True

# [gcode_shell_command verify_picked_legacy]
# command: /home/pi/check_camera.sh verify_picked
# timeout: 15
# verbose: True

# [gcode_shell_command check_camera_legacy]
# command: /home/pi/check_camera.sh check
# timeout: 15
# verbose: True

# [gcode_shell_command query_camera_legacy]
# command: /home/pi/check_camera.sh
# timeout: 15
# verbose: True

# Klipper macros for camera tool monitoring (updated for integrated service)
[gcode_macro VERIFY_CAMERA_DOCKED]
description: Verify the camera tool is properly docked
gcode:
    M118 Verifying camera is properly docked...
    RUN_SHELL_COMMAND CMD=camera_verify_docked

[gcode_macro VERIFY_CAMERA_PICKED]
description: Verify the camera tool is properly on the carriage
gcode:
    M118 Verifying camera is on carriage...
    RUN_SHELL_COMMAND CMD=camera_verify_picked

[gcode_macro CHECK_CAMERA]
description: Check general camera tool state and detect impossible states
gcode:
    M118 Checking camera state...
    RUN_SHELL_COMMAND CMD=camera_check_state

[gcode_macro QUERY_CAMERA]
description: Get current camera tool sensor values
gcode:
    M118 Querying camera sensors...
    RUN_SHELL_COMMAND CMD=camera_sensor_status

# Service status and diagnostics
[gcode_macro CAMERA_SERVICE_STATUS]
description: Show camera service status and diagnostics
gcode:
    {% set camera_ip = printer["gcode_macro CAMERA_CONFIG"].camera0ip %}
    M118 ===== CAMERA SERVICE STATUS =====
    M118 
    M118 Camera Web Interface: http://{camera_ip}:8080
    M118 
    M118 To check integrated service status on Klipper Pi:
    M118   sudo systemctl status klipper-camera
    M118 
    M118 To view service logs:
    M118   sudo journalctl -u klipper-camera -f
    M118 
    M118 Available commands:
    M118   QUERY_CAMERA              - Check sensor states
    M118   CHECK_CAMERA              - Verify no error conditions
    M118   VERIFY_CAMERA_DOCKED      - Confirm camera is docked
    M118   VERIFY_CAMERA_PICKED      - Confirm camera is on carriage

# Monitoring context for automated checks
[gcode_macro CAMERA_MONITOR_CONTEXT]
variable_active: 0
variable_interval: 30
gcode:
    # This is a placeholder for variables

# Start automated monitoring of camera tool
[gcode_macro START_CAMERA_MONITORING]
description: Begin periodic monitoring of camera tool state
gcode:
    M118 Camera monitoring is handled automatically by klipper_camera_service.py
    M118 Service monitors sensors continuously - no manual start needed
    M118 To check service: CAMERA_SERVICE_STATUS

# Stop automated monitoring of camera tool
[gcode_macro STOP_CAMERA_MONITORING]
description: Information about camera monitoring service
gcode:
    M118 Camera monitoring is managed by systemd service
    M118 To stop: sudo systemctl stop klipper-camera
    M118 To start: sudo systemctl start klipper-camera
    M118 To check status: sudo systemctl status klipper-camera

# Tool change integration macros
[gcode_macro CAMERA_TOOL_PICKED]
description: Verify camera was properly picked up
gcode:
    M118 Verifying camera tool pickup...
    VERIFY_CAMERA_PICKED

[gcode_macro CAMERA_TOOL_DOCKED]
description: Verify camera was properly docked
gcode:
    M118 Verifying camera tool docking...
    VERIFY_CAMERA_DOCKED

# Service health check at startup
[delayed_gcode CAMERA_SERVICE_CHECK]
initial_duration: 15  # Run 15 seconds after startup
gcode:
    # Check camera sensor status once at startup
    M118 Checking camera service integration...
    QUERY_CAMERA
